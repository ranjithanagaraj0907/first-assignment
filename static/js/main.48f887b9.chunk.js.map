{"version":3,"sources":["Component/ClassComponent.js","Component/FunctionalComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ClassComp","className","style","color","Component","FuncComp","App","state","isFuncVisible","isClassVisible","this","setState","onClick","toggleFuncComp","bind","toggleClassComp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAGMA,E,4JACJ,WACE,OACE,sBAAKC,UAAU,kBAAf,UACE,uEACA,gEACA,mBAAGC,MAAO,CAAEC,MAAO,uBAAnB,kD,GANgBC,aAYTJ,ICHAK,G,MAVE,WACf,OACE,sBAAKJ,UAAU,iBAAf,UACE,0EACA,gEACA,mBAAGC,MAAO,CAAEC,MAAO,uBAAnB,gDCFAG,E,4MACJC,MAAQ,CACNC,eAAe,EACfC,gBAAgB,G,qDAGlB,WACE,IAAMA,GAAkBC,KAAKH,MAAME,eACnCC,KAAKC,SAAS,CAAEF,qB,4BAGlB,WACE,IAAMD,GAAiBE,KAAKH,MAAMC,cAClCE,KAAKC,SAAS,CAAEH,oB,oBAGlB,WACE,OACE,sBAAKP,UAAU,MAAf,UACE,+EACA,sBAAKA,UAAU,YAAf,UACE,wBAAQW,QAASF,KAAKG,eAAeC,KAAKJ,MAAOT,UAAU,MAA3D,oDAGA,wBAAQW,QAASF,KAAKK,gBAAgBD,KAAKJ,MAAOT,UAAU,MAA5D,kDAIF,sBAAKA,UAAU,0BAAf,UACGS,KAAKH,MAAMC,cAAgB,cAAC,EAAD,IAAe,wBAC1CE,KAAKH,MAAME,eAAiB,cAAC,EAAD,IAAgB,kC,GA9BrCL,aAqCHE,IC9BAU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.48f887b9.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport \"./ClassComponent.css\";\r\n\r\nclass ClassComp extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"items classComp\">\r\n        <h1>This is created using Class Component</h1>\r\n        <p>This is done using external CSS</p>\r\n        <p style={{ color: \"hsl(240, 100%, 50%)\" }}>This is done using inline CSS</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClassComp;\r\n","import \"./FuncComponent.css\";\r\n\r\nconst FuncComp = () => {\r\n  return (\r\n    <div className=\"items funcComp\">\r\n      <h1>This is created using Function Component</h1>\r\n      <p>This is done using external CSS</p>\r\n      <p style={{ color: \"hsl(240, 100%, 50%)\" }}>This is done using inline CSS</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FuncComp;\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport ClassComp from \"./Component/ClassComponent\";\nimport FuncComp from \"./Component/FunctionalComponent\";\n\nclass App extends Component {\n  state = {\n    isFuncVisible: false,\n    isClassVisible: false,\n  };\n\n  toggleClassComp() {\n    const isClassVisible = !this.state.isClassVisible;\n    this.setState({ isClassVisible });\n  }\n\n  toggleFuncComp() {\n    const isFuncVisible = !this.state.isFuncVisible;\n    this.setState({ isFuncVisible });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Styling using Functional and Class Components</h1>\n        <div className=\"container\">\n          <button onClick={this.toggleFuncComp.bind(this)} className=\"btn\">\n            To see Styling in Functional Component\n          </button>\n          <button onClick={this.toggleClassComp.bind(this)} className=\"btn\">\n            To see Styling in Class Component\n          </button>\n        </div>\n        <div className=\"container compContainer\">\n          {this.state.isFuncVisible ? <FuncComp /> : <div></div>}\n          {this.state.isClassVisible ? <ClassComp /> : <div></div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}